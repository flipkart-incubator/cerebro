#!/bin/bash

worker_processes 10; #Has to be tuned
pid /var/run/nginx.pid;
events {
    worker_connections 2048; #Has to be tuned
    use epoll;
}
worker_rlimit_nofile 60000; #Has to be tuned
http {
	client_max_body_size 200M;
	include /etc/nginx/mime.types;

	sendfile on;
        tcp_nopush on;
        keepalive_timeout 20; #timeout > 0 impacts Boto client's performance
        tcp_nodelay on;
        expires max;
	gzip off;
	types_hash_max_size 2048;

	#The Log_format is commented for debug uses only. For Production Deployment use  the one
	# below it.
	#log_format request_log_format   '$remote_addr - $remote_user [$time_local] '
        #                             	'"$request" $status body_size $request_length $body_bytes_sent'
	#				'"$http_referer" "$http_user_agent"'
        #                             	' host:$http_host time: $request_time $upstream_response_time $pipe'
	#				'"$http_x_forwarded_for"';

	#Log Format for Production Deployment
	log_format request_log_format   '$remote_addr - $remote_user [$time_local] '
                                     	'"$request" $status $body_bytes_sent '
					'"$http_referer" "$http_user_agent" '
                                     	'$request_time $upstream_response_time $pipe'
					'"$http_x_forwarded_for"';

 	lua_shared_dict shared_memory 10m; #As you add more items to shared_memory, increase memory. 

	
	error_log debug.log notice; #Having a local debug file for testing - Should revert
	access_log /var/log/nginx/access.log request_log_format;
        
        # Alternate way of Initializing Per Worker Context Constructs
        # Commenting for now	
	#init_worker_by_lua_block {
         #   local timerH = require ".lua.timer.timer"
	  #  timerH.init()
	#}

	init_worker_by_lua_file 'lua/init/worker_context.lua';
	server {
		listen   80; ## listen for ipv4; this line is default and implied
		server_name  localhost;
		client_max_body_size 200M;
		client_body_buffer_size 200M;
		add_header Last-Modified "";
		proxy_http_version 1.1;
		proxy_set_header Connection "";
		proxy_intercept_errors on;
		proxy_buffering off;
		recursive_error_pages on;
		
		#error_log /var/log/debug_1.log debug;
		#error_log debug_1.log debug; #Having a local debug file for testing - Should revert
		#access_log /var/log/access_1.log request_log_format;
		#proxy_set_header Host $http_host;
                #proxy_set_header Host $proxy_elb;
                
		proxy_set_header Expect $http_expect;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		lua_code_cache on; #Changing this would highly impact performance
		
		location / {
			set $dselb '';
		       	set $dsuri '';
		       	content_by_lua_file /etc/nginx/api-gateway-layer/lua/request_router.lua;
		}

		#Make sure random hash added as suffix is in sync with constants.RANDOM_HASH
		
		location /UPSTREAM_REDIRECT {
		   proxy_pass http://$dselb$dsuri;
                   proxy_set_header Host $dselb;
		   proxy_pass_request_headers on;
		}
	        
		#APIs
		#To-do: Move them to different port or add a random hash
		location /UserStatus {
                        content_by_lua_file /etc/nginx/api-gateway-layer/lua/api/user_status_api.lua;
                }

                location /BucketStatus {
                        content_by_lua_file /etc/nginx/api-gateway-layer/lua/api/bucket_status_api.lua;
                }
                
		location /ClusterStatus {
                        content_by_lua_file /etc/nginx/api-gateway-layer/lua/api/cluster_status_api.lua;
                }
		
		location /ReplicationStatus {
                        content_by_lua_file /etc/nginx/api-gateway-layer/lua/api/replication_status_api.lua;
                }

		location /LogLevel {
			content_by_lua_file /etc/nginx/api-gateway-layer/lua/api/log_level_api.lua;
		}

	}
}
