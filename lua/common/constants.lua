-- Declare all generic constants here.

METHOD_CONSTANTS = {
	GET     = ngx.HTTP_GET,
	HEAD    = ngx.HTTP_HEAD,
	PUT     = ngx.HTTP_PUT,
	POST    = ngx.HTTP_POST,
	DELETE  = ngx.HTTP_DELETE,
	OPTIONS = ngx.HTTP_OPTION,
	MKCOL   = ngx.HTTP_MKCOL,
	COPY    = ngx.HTTP_COPY,     
	MOVE    = ngx.HTTP_MOVE,
	PATCH   = ngx.HTTP_PATCH,
	TRACE   = ngx.HTTP_TRACE
}

-- This is added to location as suffixes. This is used to prevent users 
RANDOM_HASH = "rHDuUwuLuW"

--Constants for Cluster status tuple for Redis Entry
CLUSTER_STATUS = {
	EPOCH = "epoch",
	VERSION = "version",
	READ_ENDPOINT =  "cluster_read_endpoint",
	WRITE_ENDPOINT = "cluster_write_endpoint",
	STATE = "cluster_state",
	FALLBACK_CLUSTER = "fallback_cluster"
}

--Constants for User Status Tuple for Redis Entry
USER_STATUS = {
	EPOCH = "epoch",
	VERSION = "version",
	TARGET_WRITE_CLUSTER = "target_write_cluster",
	PLACEMENT_POLICY = "placement_policy",
	BOOTSTRAP_CLUSTER = "bootstrap_cluster"
}

--Constants for Bucket Status Tuple for Redis Entry
BUCKET_STATUS = {
	EPOCH = "epoch",
	VERSION = "version",
	ACTIVE = "active",
	ACTIVE_SYNC = "active_sync",
	STATE = "state",
	OPMODE = "opmode",
	ACCESS_KEY = "access_key",
	REPLICATION_ENABLED = "replication_enabled"
}

REPLICATION_STATUS = {
	EPOCH = "epoch",
	VERSION = "version",
	REPLICATION_MODE = "repl_mode",
	READ_CLUSTER = "read_cluster",
	WRITE_CLUSTER = "write_cluster"
}

CLUSTER_STATUS_QUERY_PARAM ="cluster"
CLUSTER_STATUS_REDIS_SUFFIX = "_cluster_agl"
USER_STATUS_QUERY_PARAM ="user"
USER_STATUS_REDIS_SUFFIX = "_user_agl"
BUCKET_STATUS_QUERY_PARAM = "bucket"
BUCKET_STATUS_REDIS_SUFFIX = "_buck_agl"
REPLICATION_STATUS_QUERY_PARAM = "repl"
REPLICATION_STATUS_REDIS_SUFFIX = "_repl_agl"


-- If account or bucket is not in migration window, it is routed to Default cluster
BOOTSTRAP_CLUSTER = "cluster_a"

--Follows Redis Infra Related Constants
-- TBD: Use password for authentication
REDIS_PASSWORD = ""
--Redis Connection Pool Size
REDIS_CONN_POOL_SIZE = 512
--Redis Keep Alive Timeout in ms (120 Seconds)
REDIS_KEEPALIVE_TIMEOUT = 120000
--REDIS Minimum number of slaves required for ACk
REDIS_MIN_SLAVES_ACK = 0
--Redis Wait timeout in Milliseconds
REDIS_WAIT_ACK_TIMEOUT = 5000
--MAX RETRY PER HOST
MAX_RETRY_PER_HOST = 3

--REDIS HOST ERROR CONSTANTS
--REDIS_SENTINEL_UNREACHABLE
REDIS_SENTINEL_UNREACHABLE = 503
--REDIS_MASTER_UNREACHABLE
REDIS_MASTER_UNREACHABLE = 503
--REDIS_HOSTS_UNREACHABE
REDIS_HOST_UNREACHABLE = 503

--Identifer for the Redis Cluster we want to Connect
--This Cluster is Responsible for Caching all the info required for Active Data Path
REDIS_CLUSTER_DPATH = "redis-cluster-prod"

--CLUSTER_STATE_CONSTANTS
CLUSTER_STATE_NORMAL   = "600"
CLUSTER_STATE_DEGRADED = "601"

--Bucket State Accross All the Clusters
BUCKET_STATE_UNIFIED = "200"
BUCKET_STATE_SPLIT   = "201"

-- Bucket Operation Mode Constants (Valid In Context of Split Bucket STATE)
BUCKET_MIGRATION_IN_PROGRESS = "100"
BUCKET_FAILOVER = "101"
BUCKET_RESTORE  = "102"
BUCKET_MOCK_FAILOVER = "103"
BUCKET_MOCK_RESTORE  = "104"
BUCKET_OP_INVALID = "105"

-- Replication  Constants (Valid In Context of UNified Bucket STATE Only)
REPLICATION_DISABLED = "15000"
REPLICATION_READ = "15001"
REPLICATION_WRITE = "15002"
REPLICATION_RW = "15003"

BUCKET_REPLICATION_ENABLED = "1"
BUCKET_REPLICATION_DISABLED = "0"

-- Constants Representing Request Type, Broadly Classifying as Read or Write
REQUEST_TYPE_READ = 1000
REQUEST_TYPE_WRITE = 1001

--Timer Related Constants
TIMER_JITTER = 20 -- IN MILLISECONDS
TIMER_PERIOD = 10 -- IN SECONDS
TIMER_PERIOD_1_MIN = 60 -- IN SECONDS
TIMER_PERIOD_10_MIN = 600 -- IN SECONDS

--Log level constants
CUR_LOG_LEVEL = 3
DEFAULT_LOG_LEVEL = 3 
LOG_LEVEL = {
	VERBOSE = 1,
	DEBUG = 2,
	INFO = 3,
	NOTICE = 4,
	WARNING = 5,
	ERROR = 6,
	CRITICAL = 7,
	FATAL = 8
}

--Log level API constants
LOG_LEVEL_API_KEY = "level"
LOG_LEVEL_API = {
	VERBOSE = "verbose",
	DEBUG = "debug",
	INFO = "info",
	NOTICE = "notice",
	WARNING = "warning",
	ERROR = "error",
	CRITICAL = "critical",
	FATAL = "fatal"
}

--Shared memory keys
SHARED_MEMORY_KEYS = {
	LOG_LEVEL = "log_level"
}

--ELB related constants
--This String needs to be exactly as the one provided while creating the VIP for this group
--By default the string is "elb-healthcheck", any implementation change on the VIP side
--should be immediately cascaded here
ELB_REQUEST_LOCATION = "elb-healthcheck"

-- Header attributes
CREDENTIAL_HEADER_PARAM = "Credential="
IS_MIGRATOR_HEADER = "x-is-migrator"

--Placement Policy Constants
PLACEMENT_POLICY_DEFAULT = "ppl_default"

return {
	METHOD_CONSTANTS = METHOD_CONSTANTS,
	MIGRATION_STATUS = MIGRATION_STATUS,
	CLUSTER_NAMES = CLUSTER_NAMES,
	CREDENTIAL_HEADER_PARAM = CREDENTIAL_HEADER_PARAM,
	IS_MIGRATOR_HEADER = IS_MIGRATOR_HEADER,
	REPLICATION_STATUS = REPLICATION_STATUS,
	CLUSTER_STATUS = CLUSTER_STATUS,
	USER_STATUS = USER_STATUS,
	BUCKET_STATUS = BUCKET_STATUS,
	BOOTSTRAP_CLUSTER = BOOTSTRAP_CLUSTER,
	CUR_LOG_LEVEL = CUR_LOG_LEVEL,
	DEFAULT_LOG_LEVEL = DEFAULT_LOG_LEVEL,
	LOG_LEVEL = LOG_LEVEL,
	LOG_LEVEL_API_KEY = LOG_LEVEL_API_KEY,
	LOG_LEVEL_API = LOG_LEVEL_API,
	SHARED_MEMORY_KEYS = SHARED_MEMORY_KEYS,
	ELB_REQUEST_LOCATION = ELB_REQUEST_LOCATION,
	USER_STATUS_QUERY_PARAM = USER_STATUS_QUERY_PARAM,
	BUCKET_STATUS_QUERY_PARAM = BUCKET_STATUS_QUERY_PARAM,
	USER_STATUS_REDIS_SUFFIX = USER_STATUS_REDIS_SUFFIX,
	BUCKET_STATUS_REDIS_SUFFIX = BUCKET_STATUS_REDIS_SUFFIX,
	CLUSTER_STATUS_QUERY_PARAM = CLUSTER_STATUS_QUERY_PARAM,
	CLUSTER_STATUS_REDIS_SUFFIX = CLUSTER_STATUS_REDIS_SUFFIX,
	REPLICATION_STATUS_QUERY_PARAM = REPLICATION_STATUS_QUERY_PARAM,
	REPLICATION_STATUS_REDIS_SUFFIX = REPLICATION_STATUS_REDIS_SUFFIX,
	REDIS_PASSWORD = REDIS_PASSWORD,
        REDIS_POOL_SIZE = REDIS_POOL_SIZE,
        REDIS_KEEPALIVE_TIMEOUT = REDIS_KEEPALIVE_TIMEOUT,
        REDIS_MIN_SLAVES_ACK = REDIS_MIN_SLAVES_ACK,
        REDIS_WAIT_ACK_TIMEOUT = REDIS_WAIT_ACK_TIMEOUT,
        REDIS_SENTINEL_UNREACHABLE = REDIS_SENTINEL_UNREACHABLE,
        REDIS_MASTER_UNREACHABLE = REDIS_MASTER_UNREACHABLE,
        REDIS_HOST_UNREACHABLE = REDIS_HOST_UNREACHABLE,
        REDIS_CLUSTER_DPATH = REDIS_CLUSTER_DPATH,
	MAX_RETRY_PER_HOST = MAX_RETRY_PER_HOST,
	REQUEST_TYPE_READ = REQUEST_TYPE_READ,
	REQUEST_TYPE_WRITE = REQUEST_TYPE_WRITE,
	TIMER_JITTER = TIMER_JITTER,
	TIMER_PERIOD = TIMER_PERIOD,
	TIMER_PERIOD_1_MIN = TIMER_PERIOD_1_MIN,
	TIMER_PERIOD_10_MIN = TIMER_PERIOD_10_MIN,
        BUCKET_STATE_UNIFIED = BUCKET_STATE_UNIFIED,
        BUCKET_STATE_SPLIT = BUCKET_STATE_SPLIT,
        BUCKET_MIGRATION_IN_PROGRESS = BUCKET_MIGRATION_IN_PROGRESS,
        BUCKET_FAILOVER = BUCKET_FAILOVER,
        BUCKET_RESTORE  = BUCKET_RESTORE,
	BUCKET_MOCK_FAILOVER = BUCKET_MOCK_FAILOVER,
	BUCKET_MOCK_RESTORE  = BUCKET_MOCK_RESTORE,
        BUCKET_OP_INVALID = BUCKET_OP_INVALID,
	CLUSTER_STATE_NORMAL = CLUSTER_STATE_NORMAL,
	CLUSTER_STATE_DEGRADED = CLUSTER_STATE_DEGRADED,
	REPLICATION_DISABLED = REPLICATION_DISABLED,
	REPLICATION_READ = REPLICATION_READ,
	REPLICATION_WRITE = REPLICATION_WRITE,
	REPLICATION_RW = REPLICATION_RW,
	PLACEMENT_POLICY_DEFAULT = PLACEMENT_POLICY_DEFAULT,
	BUCKET_REPLICATION_ENABLED = BUCKET_REPLICATION_ENABLED,
	BUCKET_REPLICATION_DISABLED = BUCKET_REPLICATION_DISABLED
}
